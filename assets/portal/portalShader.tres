[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://dcmwtebyys6hc"]

[ext_resource type="Texture2D" uid="uid://j845wht7e8h3" path="res://assets/portal/T_VFX_lelu1_tiled.png" id="1_kyy4r"]
[ext_resource type="Texture2D" uid="uid://bcp7qdigh3ewg" path="res://assets/portal/T_VFX_CircleFit1.png" id="2_p850x"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_w7wjg"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ieloi"]
parameter_name = "IntenseParam"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_mrflo"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_k0xvx"]
expanded_output_ports = [0]
texture = ExtResource("1_kyy4r")
texture_type = 1

[sub_resource type="VisualShaderNodeUVPolarCoord" id="VisualShaderNodeUVPolarCoord_qqq5l"]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_0mlf6"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ecw6k"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_kwmg2"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(-0.3, 0.3, 0.3)]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_pkn44"]
expanded_output_ports = [0]
texture = ExtResource("2_p850x")
texture_type = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_etj3d"]
parameter_name = "ColorParam"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_2 : source_color;
uniform vec4 ColorParam : source_color;
uniform float IntenseParam;



void fragment() {
	vec2 n_out3p0;
// UVPolarCoord:3
	vec2 n_in3p1 = vec2(0.50000, 0.50000);
	float n_in3p2 = 1.00000;
	float n_in3p3 = 1.00000;
	{
		vec2 __dir = UV - n_in3p1;
		float __radius = length(__dir) * 2.0;
		float __angle = atan(__dir.y, __dir.x) * 1.0 / (PI * 2.0);
		n_out3p0 = vec2(__radius * n_in3p2, __angle * n_in3p3);
	}


// Input:5
	float n_out5p0 = TIME;


// VectorOp:7
	vec3 n_in7p1 = vec3(-0.30000, 0.30000, 0.30000);
	vec3 n_out7p0 = vec3(n_out5p0) * n_in7p1;


// UVFunc:4
	vec2 n_in4p1 = vec2(1.00000, 1.00000);
	vec2 n_out4p0 = vec2(n_out7p0.xy) * n_in4p1 + n_out3p0;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, n_out4p0);
	float n_out2p1 = n_out2p0.r;


// ColorParameter:9
	vec4 n_out9p0 = ColorParam;


// FloatParameter:11
	float n_out11p0 = IntenseParam;


// VectorOp:13
	vec4 n_out13p0 = n_out9p0 * vec4(n_out11p0);


// VectorOp:10
	vec3 n_out10p0 = vec3(n_out2p1) * vec3(n_out13p0.xyz);


// Output:0
	ALBEDO = n_out10p0;
	EMISSION = n_out10p0;


}
"
modes/cull = 2
nodes/fragment/0/position = Vector2(1300, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_k0xvx")
nodes/fragment/2/position = Vector2(720, -120)
nodes/fragment/3/node = SubResource("VisualShaderNodeUVPolarCoord_qqq5l")
nodes/fragment/3/position = Vector2(260, -100)
nodes/fragment/4/node = SubResource("VisualShaderNodeUVFunc_0mlf6")
nodes/fragment/4/position = Vector2(500, -60)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_ecw6k")
nodes/fragment/5/position = Vector2(-60, 120)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_kwmg2")
nodes/fragment/7/position = Vector2(280, 60)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture_pkn44")
nodes/fragment/8/position = Vector2(880, 340)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorParameter_etj3d")
nodes/fragment/9/position = Vector2(120, 220)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_w7wjg")
nodes/fragment/10/position = Vector2(960, 0)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatParameter_ieloi")
nodes/fragment/11/position = Vector2(140, 400)
nodes/fragment/13/node = SubResource("VisualShaderNodeVectorOp_mrflo")
nodes/fragment/13/position = Vector2(580, 220)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 4, 0, 2, 0, 5, 0, 7, 0, 7, 0, 4, 2, 10, 0, 0, 0, 9, 0, 13, 0, 11, 0, 13, 1, 13, 0, 10, 1, 2, 1, 10, 0, 10, 0, 0, 5)
